"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[123],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var a=r.createContext({}),l=function(e){var t=r.useContext(a),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,a=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),f=l(n),g=o,m=f["".concat(a,".").concat(g)]||f[g]||p[g]||i;return n?r.createElement(m,s(s({ref:t},u),{},{components:n})):r.createElement(m,s({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,s=new Array(i);s[0]=f;var c={};for(var a in t)hasOwnProperty.call(t,a)&&(c[a]=t[a]);c.originalType=e,c.mdxType="string"==typeof e?e:o,s[1]=c;for(var l=2;l<i;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},9647:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return a},metadata:function(){return l},toc:function(){return u},default:function(){return f}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),s=["components"],c={title:"Content Suggestions"},a=void 0,l={unversionedId:"blocks/content-suggestions",id:"blocks/content-suggestions",isDocsHomePage:!1,title:"Content Suggestions",description:"An important part of virtual care is self care. One way to support that is by bringing the right information to patients.",source:"@site/docs/blocks/content-suggestions.md",sourceDirName:"blocks",slug:"/blocks/content-suggestions",permalink:"/docs/blocks/content-suggestions",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/blocks/content-suggestions.md",tags:[],version:"current",frontMatter:{title:"Content Suggestions"},sidebar:"docs",previous:{title:"Secure Authentication",permalink:"/docs/blocks/authentication"},next:{title:"Conversational Assessment",permalink:"/docs/blocks/conversational-assessment"}},u=[{value:"Prerequisites",id:"prerequisites",children:[],level:3},{value:"Example",id:"example",children:[],level:3}],p={toc:u};function f(e){var t=e.components,n=(0,o.Z)(e,s);return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An important part of virtual care is self care. One way to support that is by bringing the right information to patients."),(0,i.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Configure Airtable app & key in project configuration.")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("p",null,"You can grab the records of any table like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useContent } from '@healthblocks-io/core/content'\nimport type { Suggestion } from '@healthblocks-io/core/types'\n\nfunction Example () {}\n  const suggestions = useContent<Suggestion>('Suggestions')\n\n  return (\n    <ul>\n      {suggestions.map((s, key) => <li key={key}>{s.Title}</li>)}\n    </ul>\n  )\n}\n")))}f.isMDXComponent=!0}}]);