(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{114:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},u=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(n),d=r,m=u["".concat(i,".").concat(d)]||u[d]||b[d]||o;return n?a.a.createElement(m,c(c({ref:t},l),{},{components:n})):a.a.createElement(m,c({ref:t},l))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var p in t)hasOwnProperty.call(t,p)&&(c[p]=t[p]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},93:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),o=(n(0),n(114)),i={title:"Initial project setup"},c={unversionedId:"guides/initial-project-setup",id:"guides/initial-project-setup",isDocsHomePage:!1,title:"Initial project setup",description:"Existing project",source:"@site/docs/guides/initial-project-setup.md",slug:"/guides/initial-project-setup",permalink:"/docs/guides/initial-project-setup",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/guides/initial-project-setup.md",version:"current",sidebar:"docs",previous:{title:"Getting started",permalink:"/docs/"},next:{title:"Analytics tracking events",permalink:"/docs/guides/analytics-tracking-events"}},p=[{value:"Existing project",id:"existing-project",children:[]},{value:"New Expo App",id:"new-expo-app",children:[]}],l={toc:p};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"existing-project"},"Existing project"),Object(o.b)("p",null,'We currently focus on the "New Expo App" workflow below.'),Object(o.b)("p",null,"Install the modules"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-bash"},"# React Native app\nyarn add @healthblocks-io/core @healthblocks-io/apollo @healthblocks-io/native\n\n# Web app\nyarn add @healthblocks-io/core @healthblocks-io/apollo\n\n# Server\nyarn add @healthblocks-io/core\n")),Object(o.b)("h2",{id:"new-expo-app"},"New Expo App"),Object(o.b)("p",null,"This guide will help you get started with integrating Healthblocks in a new Expo project."),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Clone the boilerplate project, start from empty folder"),Object(o.b)("pre",{parentName:"li"},Object(o.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/healthblocks-io/template-app project-name\n# OR\nnpx degit https://github.com/healthblocks-io/template-app project-name\n\ncd project-name\nyarn\nyarn dev\n"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Customize app.json to your needs : name, slug, android.package, ios.bundleIdentifier")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Publish using the expo cli: ",Object(o.b)("inlineCode",{parentName:"p"},"npx expo publish"))),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Enable CI/CD, we use GitHub Actions, these are included in the template. You need some ENV secrets though:"),Object(o.b)("p",{parentName:"li"},"Visit your project on Github > Settings > Secrets and check if ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_CLI_PASSWORD")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_CLI_USERNAME")," are configured. It's a good practice to configure these on an organisation level (for an agency)."),Object(o.b)("p",{parentName:"li"},"As an agency, you may not want to share all your apps in development with every client. That's why the template also includes actions that publish with the ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_CLI_USERNAME_CLIENT")," and ",Object(o.b)("inlineCode",{parentName:"p"},"EXPO_CLI_PASSWORD_CLIENT")," credentials. By default, we expect that these credentials are only used for demonstration purposes, so these credentials should not be used to build the final production app. If a client wants to join development, it's possible to consider using the client credentials for building the app. (building means e.g ",Object(o.b)("inlineCode",{parentName:"p"},"expo build:ios")," here)"))))}s.isMDXComponent=!0}}]);