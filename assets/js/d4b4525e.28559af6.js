"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9011],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var u=r.createContext({}),l=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),p=l(n),m=a,h=p["".concat(u,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(h,s(s({ref:t},c),{},{components:n})):r.createElement(h,s({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,s=new Array(o);s[0]=p;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var l=2;l<o;l++)s[l]=n[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},81622:function(e,t,n){n.d(t,{Z:function(){return a}});var r=n(67294);function a(e){e.children;var t=e.expo,n=void 0!==t&&t,a=e.web,o=e.rn,s=e.react;return r.createElement("div",{style:{margin:"1em 0"}},"Platforms:",a&&r.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Web"),s&&r.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React"),o&&r.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React Native"),n&&r.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Expo"))}},20120:function(e,t,n){n.r(t),n.d(t,{assets:function(){return d},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return p}});var r=n(83117),a=n(80102),o=(n(67294),n(3905)),s=n(81622),i=["components"],u={title:"useAuth"},l=void 0,c={unversionedId:"react/hooks/useAuth",id:"react/hooks/useAuth",title:"useAuth",description:"Only users with push tokens can receive notifications. This hook can be used to manage the tokens of the currently signed in user.",source:"@site/docs/react/hooks/useAuth.md",sourceDirName:"react/hooks",slug:"/react/hooks/useAuth",permalink:"/docs/react/hooks/useAuth",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/react/hooks/useAuth.md",tags:[],version:"current",frontMatter:{title:"useAuth"},sidebar:"docs",previous:{title:"useAsyncToken",permalink:"/docs/react/hooks/useAsyncToken"},next:{title:"useProject",permalink:"/docs/react/hooks/useProject"}},d={},p=[{value:"API",id:"api",level:2},{value:"Methods",id:"methods",level:2},{value:"setData(state)",id:"setdatastate",level:3},{value:"Arguments",id:"arguments",level:4},{value:"handleAuth(state)",id:"handleauthstate",level:3},{value:"Arguments",id:"arguments-1",level:4},{value:"Example",id:"example",level:4},{value:"Returns",id:"returns",level:4}],m={toc:p};function h(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(s.Z,{expo:!0,mdxType:"Platforms"}),(0,o.kt)("p",null,"Only users with push tokens can receive notifications. This hook can be used to manage the tokens of the currently signed in user."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useAuthActions } from '@healthblocks-io/core/auth'\n\nfunction Page() {\n  // Use methods\n  const { signInWithEmailAndPassword } = useAuthActions()\n  // Read token data\n  const { id_token, refresh_token } = useAuthState()\n}\nexport interface AuthContextType {\n  data: AuthState | null\n  error: Error | null\n  loading: boolean\n  mfa: MultiFactorState | null\n}\n")),(0,o.kt)("h2",{id:"api"},"API"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"import { useAuth } from '@healthblocks-io/core/auth'\n")),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"setdatastate"},"setData(state)"),(0,o.kt)("h4",{id:"arguments"},"Arguments"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"state: AuthState")," - Any valid AuthState")),(0,o.kt)("p",null,"Overwrite the auth state. Not recommended."),(0,o.kt)("h3",{id:"handleauthstate"},"handleAuth(state)"),(0,o.kt)("h4",{id:"arguments-1"},"Arguments"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"state: AuthState & ErrorResponse")," - Anything that looks like an AuthState or error")),(0,o.kt)("h4",{id:"example"},"Example"),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"state: AuthState & ErrorResponse")," - Anything that looks like an AuthState or error\n",(0,o.kt)("inlineCode",{parentName:"p"},"handleAuth: (state: AuthState & ErrorResponse) => AuthState & ErrorResponse")),(0,o.kt)("p",{parentName:"li"},"dismissError: () => void\nsignInAnonymously: (options?: { sub?: string }) => void\nsignInWithToken: (id_token: string) => void\n/","*","*"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},'Also known as "register"\n',"*","/\ncreateUserWithEmailAndPassword: (\nemail: string,\npassword: string,\ncode?: string\n) => Promise<{ success: boolean }>\n/","*","*"),(0,o.kt)("li",{parentName:"ul"},"Signs the user in with a random id\n","*","/\nsignInWithEmailAndPassword: (\nemail: string,\npassword: string\n) => Promise<AuthState & ErrorResponse>\nsendPasswordResetEmail: (email: string) => Promise<{ sent: ","[string]"," }>\nrefresh: () => void\nsignOut: () => void")))))}h.isMDXComponent=!0}}]);