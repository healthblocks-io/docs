"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9140],{3905:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return h}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var m=a.createContext({}),p=function(e){var t=a.useContext(m),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(m.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,m=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=p(r),h=n,f=u["".concat(m,".").concat(h)]||u[h]||c[h]||i;return r?a.createElement(f,l(l({ref:t},s),{},{components:r})):a.createElement(f,l({ref:t},s))}));function h(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,l=new Array(i);l[0]=u;var o={};for(var m in t)hasOwnProperty.call(t,m)&&(o[m]=t[m]);o.originalType=e,o.mdxType="string"==typeof e?e:n,l[1]=o;for(var p=2;p<i;p++)l[p]=r[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2691:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return m},default:function(){return h},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return c}});var a=r(83117),n=r(80102),i=(r(67294),r(3905)),l=["components"],o={sidebar_position:1.1,title:"Member"},m=void 0,p={unversionedId:"concepts/project-member",id:"concepts/project-member",title:"Member",description:"A member is a profile in the context of a project. Medical data is always linked to a member.",source:"@site/docs/concepts/project-member.md",sourceDirName:"concepts",slug:"/concepts/project-member",permalink:"/docs/concepts/project-member",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/concepts/project-member.md",tags:[],version:"current",sidebarPosition:1.1,frontMatter:{sidebar_position:1.1,title:"Member"},sidebar:"docs",previous:{title:"Project",permalink:"/docs/concepts/project"},next:{title:"Care Team",permalink:"/docs/concepts/care-team"}},s={},c=[{value:"Multiple members for the same user/project",id:"multiple-members-for-the-same-userproject",level:3},{value:"A user is not a member",id:"a-user-is-not-a-member",level:3},{value:"Placeholder profiles",id:"placeholder-profiles",level:3}],u={toc:c};function h(e){var t=e.components,r=(0,n.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A member is a profile in the context of a project. Medical data is always linked to a member."),(0,i.kt)("p",null,"Corresponds to ",(0,i.kt)("a",{parentName:"p",href:"http://www.hl7.org/fhir/patient.html"},"FHIR Patient")," or ",(0,i.kt)("a",{parentName:"p",href:"http://www.hl7.org/fhir/practitioner.html"},"FHIR Practitioner"),"."),(0,i.kt)("h3",{id:"multiple-members-for-the-same-userproject"},"Multiple members for the same user/project"),(0,i.kt)("p",null,"One users may have multiple members in the same project. This may happen when creating ",(0,i.kt)("a",{parentName:"p",href:"#placeholder-profiles"},"placeholder profiles")," or when someone has multiple roles."),(0,i.kt)("p",null,"Example: a pharmacist that is also a patient"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User: name=",(0,i.kt)("inlineCode",{parentName:"li"},"Jane"),(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Member: name=",(0,i.kt)("inlineCode",{parentName:"li"},"Jane Phyllis")," role=",(0,i.kt)("inlineCode",{parentName:"li"},"patient")," phone=",(0,i.kt)("inlineCode",{parentName:"li"},"<personal-phone>")),(0,i.kt)("li",{parentName:"ol"},"Member: name=",(0,i.kt)("inlineCode",{parentName:"li"},"Pharmacy Phyllis")," role=",(0,i.kt)("inlineCode",{parentName:"li"},"caregiver")," phone=",(0,i.kt)("inlineCode",{parentName:"li"},"<work-phone>"))))),(0,i.kt)("h3",{id:"a-user-is-not-a-member"},"A user is not a member"),(0,i.kt)("p",null,"When a user joins a project, a member profile is created. This member may have a different name and email address than the user."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The user profile contains the minimal amount of data. The email address must be verified for some usecases."),(0,i.kt)("li",{parentName:"ul"},"The member profile data can be freely edited by the person and is usually not verified.")),(0,i.kt)("h3",{id:"placeholder-profiles"},"Placeholder profiles"),(0,i.kt)("p",null,"Administrators can create as many members as they wish. This is useful for testing. Another usecase is preparing a member profile for which you can then send a magic link which the patient/caregiver can use to claim their profile."),(0,i.kt)("p",null,"Example: preparing a care team situation"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User: name=Thomas",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Member: name=Administrator role=admin"),(0,i.kt)("li",{parentName:"ul"},"Member: name=Dr. Thomas role=caregiver"),(0,i.kt)("li",{parentName:"ul"},"Member: name=Pharmacist Phyllis role=caregiver"),(0,i.kt)("li",{parentName:"ul"},"Member: name=Thomas Example role=patient",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Careteam: Mental coaching",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Participant: Dr. Thomas"),(0,i.kt)("li",{parentName:"ul"},"Participant: Pharmacist Phyllis")))))))),(0,i.kt)("p",null,"If Thomas now sends a magic link to Jane Phyllis and creates an account and accepts the invite, we get this:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"User: name=Jane",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Member: name=Pharmacist Phyllis role=caregiver"))),(0,i.kt)("li",{parentName:"ol"},"User: name=Thomas",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Member: name=Administrator role=admin"),(0,i.kt)("li",{parentName:"ul"},"Member: name=Dr. Thomas role=caregiver"),(0,i.kt)("li",{parentName:"ul"},"Member: name=Thomas Example role=patient",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Careteam: Mental coaching",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Participant: Dr. Thomas"),(0,i.kt)("li",{parentName:"ul"},"Participant: Pharmacist Phyllis")))))))),(0,i.kt)("p",null,"Note that placeholder profiles are transferable between users. Administrators can transfer members manually, but the idea is that people claim their member using a magic link."))}h.isMDXComponent=!0}}]);