"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9448],{3905:function(e,t,r){r.d(t,{Zo:function(){return p},kt:function(){return f}});var n=r(67294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),h=s(r),f=o,m=h["".concat(l,".").concat(f)]||h[f]||u[f]||a;return r?n.createElement(m,i(i({ref:t},p),{},{components:r})):n.createElement(m,i({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=h;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},75666:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return h}});var n=r(87462),o=r(63366),a=(r(67294),r(3905)),i=["components"],c={title:"Health Profile"},l=void 0,s={unversionedId:"blocks/health-profile",id:"blocks/health-profile",isDocsHomePage:!1,title:"Health Profile",description:"The health profile represents a set of FHIR resources.",source:"@site/docs/blocks/health-profile.md",sourceDirName:"blocks",slug:"/blocks/health-profile",permalink:"/docs/blocks/health-profile",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/blocks/health-profile.md",tags:[],version:"current",frontMatter:{title:"Health Profile"},sidebar:"docs",previous:{title:"Conversational Assessment",permalink:"/docs/blocks/conversational-assessment"},next:{title:"Care Plan",permalink:"/docs/blocks/care-plan-activities"}},p=[{value:"Provider setup",id:"provider-setup",children:[],level:3},{value:"Chart.js",id:"chartjs",children:[],level:3}],u={toc:p};function h(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The health profile represents a set of FHIR resources."),(0,a.kt)("h3",{id:"provider-setup"},"Provider setup"),(0,a.kt)("p",null,"Enable the ",(0,a.kt)("inlineCode",{parentName:"p"},"useFHIR()")," hook using the ",(0,a.kt)("inlineCode",{parentName:"p"},"<FHIRProvider>"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { FHIRProvider } from '@healthblocks-io/core/fhir'\n\nfunction ProjectApp () {}\n  const auth = useAuthState()\n  if (!auth) return <SignInScreen />\n\n  return (\n    <FHIRProvider>\n      <Example />\n    </FHIRProvider>\n  )\n}\n")),(0,a.kt)("p",null,"Now let's use ",(0,a.kt)("inlineCode",{parentName:"p"},"useSearch()")," to retrieve all observations."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useSearch } from '@healthblocks-io/core/fhir'\nimport { toTimeChart } from '@healthblocks-io/core/observation'\nimport { Observation } from '@healthblocks-io/core/types'\n\nfunction Example() {\n  const search = useSearch<Observation>({ type: 'Observation' })\n\n  if (!search.data?.entry) return <Loading />\n  if (!search.data.entry.length) return <EmptyScreen title=\"No observations\" />\n\n  return (\n    <>\n      {search.data.entry.map((observation, key) => ...)}\n    </>\n  )\n}\n")),(0,a.kt)("h3",{id:"chartjs"},"Chart.js"),(0,a.kt)("p",null,"There is a function ",(0,a.kt)("inlineCode",{parentName:"p"},"toTimeChart(observations)")," available that prepares observations for passing them to Chart.js"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useSearch } from '@healthblocks-io/core/fhir'\nimport { toTimeChart } from '@healthblocks-io/core/observation'\nimport { Observation } from '@healthblocks-io/core/types'\n\nfunction ChartExample () {\n  const search = useSearch<Observation>({ type: 'Observation' })\n  const chart = toTimeChart(search.data?.entry)\n  return chart && <ChartJS chart={chart} />\n}\n")))}h.isMDXComponent=!0}}]);