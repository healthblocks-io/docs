"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9872],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var o=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=o.createContext({}),p=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return o.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return n?o.createElement(m,s(s({ref:t},c),{},{components:n})):o.createElement(m,s({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},49104:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return h},frontMatter:function(){return i},metadata:function(){return p},toc:function(){return d}});var o=n(83117),r=n(80102),a=(n(67294),n(3905)),s=["components"],i={title:"Local setup"},l=void 0,p={unversionedId:"deploy/local",id:"deploy/local",title:"Local setup",description:"Use cases:",source:"@site/docs/deploy/local.md",sourceDirName:"deploy",slug:"/deploy/local",permalink:"/docs/deploy/local",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/deploy/local.md",tags:[],version:"current",frontMatter:{title:"Local setup"},sidebar:"docs",previous:{title:"Getting started with Next.js",permalink:"/docs/guides/next-template-app"},next:{title:"Local development setup",permalink:"/docs/deploy/dev"}},c={},d=[{value:"Use cases:",id:"use-cases",level:3},{value:"Install Docker",id:"install-docker",level:3},{value:"Prepare the postgres roles &amp; databases",id:"prepare-the-postgres-roles--databases",level:3},{value:"Prepare a Docker Compose file",id:"prepare-a-docker-compose-file",level:3},{value:"Start Docker Compose",id:"start-docker-compose",level:3},{value:"Open the API endpoint",id:"open-the-api-endpoint",level:3},{value:"Sign in on the dashboard",id:"sign-in-on-the-dashboard",level:3}],u={toc:d};function h(e){var t=e.components,n=(0,r.Z)(e,s);return(0,a.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"use-cases"},"Use cases:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"You are building a patient experience"),(0,a.kt)("li",{parentName:"ul"},"You would like to develop integrations")),(0,a.kt)("h3",{id:"install-docker"},"Install Docker"),(0,a.kt)("p",null,"Easiest solution is to install ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/mac/install/"},"Docker Desktop for Mac")," or ",(0,a.kt)("a",{parentName:"p",href:"https://docs.docker.com/desktop/windows/install/"},"Docker Desktop for Windows"),"."),(0,a.kt)("h3",{id:"prepare-the-postgres-roles--databases"},"Prepare the postgres roles & databases"),(0,a.kt)("p",null,"Create a file: ",(0,a.kt)("inlineCode",{parentName:"p"},"postgres/init.sql")," with the following contents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"CREATE ROLE nestjs with login encrypted password 'nestjs';\nCREATE DATABASE nestjs;\nGRANT ALL PRIVILEGES ON DATABASE nestjs TO nestjs;\n\nCREATE ROLE adminui with login encrypted password 'adminui';\nCREATE DATABASE adminui;\nGRANT ALL PRIVILEGES ON DATABASE adminui TO adminui;\n")),(0,a.kt)("h3",{id:"prepare-a-docker-compose-file"},"Prepare a Docker Compose file"),(0,a.kt)("p",null,"Create a file: ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose.yml")," with the following contents:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-yml"},"version: '3'\nservices:\n  admin:\n    image: healthblocks/admin:latest\n    environment:\n      # API\n      HEALTHBLOCKS_API_EXTERNAL: http://localhost:22221\n      HEALTHBLOCKS_API_INTERNAL: http://api:3000\n      # Auth\n      NEXTAUTH_URL: http://localhost:22228\n      NEXTAUTH_URL_INTERNAL: http://localhost:3000\n      NEXTAUTH_SECRET: aaaabbbbccccdddd\n      DATABASE_URL: postgres://adminui:adminui@postgres:5432/adminui?connect_timeout=30\n    ports:\n      - '22228:3000'\n    depends_on:\n      - api\n      - admin-migrate\n    restart: always\n  admin-migrate:\n    image: healthblocks/admin-migrate:latest\n    environment:\n      DATABASE_URL: postgres://adminui:adminui@postgres:5432/adminui?connect_timeout=30\n    depends_on:\n      postgres:\n        condition: service_healthy\n  api:\n    image: healthblocks/platform:latest\n    environment:\n      # Initial setup\n      INITIAL_SETUP: 1\n      ADMIN_URL: http://localhost:22228\n      # API\n      ORIGIN: http://localhost:22221\n      DATABASE_URL: postgres://nestjs:nestjs@postgres:5432/nestjs?connect_timeout=30\n      APP_SECRET: 444a45b38193572dd7d3c0d691d806b487dbdfe1\n      ALLOWED_ORIGINS: http://localhost:22221,http://localhost:22228,http://localhost:20072\n    ports:\n      - '22221:3000'\n    depends_on:\n      postgres:\n        condition: service_healthy\n    restart: always\n    healthcheck:\n      test: curl --fail http://localhost:3000 || exit 1\n      interval: 10s\n      timeout: 5s\n      retries: 5\n  postgres:\n    image: postgres:14\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n      - ./postgres:/docker-entrypoint-initdb.d\n    restart: always\n    healthcheck:\n      test: ['CMD-SHELL', 'pg_isready -U postgres']\n      interval: 10s\n      timeout: 5s\n      retries: 5\nvolumes:\n  postgres-data:\n")),(0,a.kt)("h3",{id:"start-docker-compose"},"Start Docker Compose"),(0,a.kt)("p",null,"This will create a postgres container with 2 databases. One for the API and one for the admin UI."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"docker compose up -d\n")),(0,a.kt)("h3",{id:"open-the-api-endpoint"},"Open the API endpoint"),(0,a.kt)("p",null,"It could take a couple minutes to download the containers and start postgres. Once it's ready, the API should be available at ",(0,a.kt)("a",{parentName:"p",href:"http://localhost:22221"},"http://localhost:22221"),"."),(0,a.kt)("p",null,"There are three steps:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Choose an authenticator method. ",(0,a.kt)("strong",{parentName:"li"},"Credentials")," is the easiest one as it doesn't require an external service. OAuth2 is recommended though, on the one hand for security and on the other hand as it is faster than typing in a username and password every time!"),(0,a.kt)("li",{parentName:"ol"},"(only when using oAuth) configure the given redirect URI for your oAuth2 provider."),(0,a.kt)("li",{parentName:"ol"},"(recommended) Disable the ",(0,a.kt)("inlineCode",{parentName:"li"},"INITIAL_SETUP")," environment variable. As long as it is enabled, anyone can run the initial setup. This is fine when developing locally, but must definitely be disabled in production!")),(0,a.kt)("p",null,"Now visit the dashboard."),(0,a.kt)("h3",{id:"sign-in-on-the-dashboard"},"Sign in on the dashboard"),(0,a.kt)("p",null,"There should be a sign in screen using the chosen authenticator. Anyone can use it to make an account. Let's do this. This sign in screen is meant for users (typically administrators) that may interact with multiple projects."),(0,a.kt)("p",null,"When signed in you can manage the server. There is not much more to do than to ",(0,a.kt)("a",{parentName:"p",href:"/docs/getting-started/project"},"create a project")," or accept invites to other projects."),(0,a.kt)("p",null,"Note the suggestions, these should guide you further in the setup of your project."))}h.isMDXComponent=!0}}]);