"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3605],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return d}});var t=n(67294);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=t.createContext({}),c=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},u=function(e){var r=c(e.components);return t.createElement(l.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},h=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=c(n),d=o,f=h["".concat(l,".").concat(d)]||h[d]||p[d]||a;return n?t.createElement(f,i(i({ref:r},u),{},{components:n})):t.createElement(f,i({ref:r},u))}));function d(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=h;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}h.displayName="MDXCreateElement"},20705:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return h}});var t=n(87462),o=n(63366),a=(n(67294),n(3905)),i=["components"],s={title:"Serverside integration"},l=void 0,c={unversionedId:"examples/@healthblocks-io/server",id:"examples/@healthblocks-io/server",isDocsHomePage:!1,title:"Serverside integration",description:"@healthblocks-io/server DOES NOT EXIST YET, see code below",source:"@site/docs/examples/@healthblocks-io/server.md",sourceDirName:"examples/@healthblocks-io",slug:"/examples/@healthblocks-io/server",permalink:"/docs/examples/@healthblocks-io/server",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/examples/@healthblocks-io/server.md",tags:[],version:"current",frontMatter:{title:"Serverside integration"}},u=[{value:"Next.js example WITHOUT verifying user credentials",id:"nextjs-example-without-verifying-user-credentials",children:[],level:3},{value:"Next.js example with verifying user credentials",id:"nextjs-example-with-verifying-user-credentials",children:[],level:3}],p={toc:u};function h(e){var r=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"@healthblocks-io/server DOES NOT EXIST YET, see code below"),(0,a.kt)("h3",{id:"nextjs-example-without-verifying-user-credentials"},"Next.js example WITHOUT verifying user credentials"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// pages/api/homescreen\nimport { gql, query } from '@healthblocks-io/server/graphql'\n\nexport default async function (req, res) {\n  const result = await query(\n    gql`\n      query Profile($uid: String!) {\n        users_by_pk(uid: $uid) {\n          doc\n        }\n      }\n    `,\n    { uid: req.uid },\n    { auth: req.headers.authorization.replace('Bearer ', '') }\n  )\n\n  res.json({ user: result.data.users_by_pk })\n}\n")),(0,a.kt)("h3",{id:"nextjs-example-with-verifying-user-credentials"},"Next.js example with verifying user credentials"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// pages/api/homescreen\nimport { verify } from '@healthblocks-io/server/auth'\nimport { gql, query } from '@healthblocks-io/server/graphql'\n\nexport default async function (req, res) {\n  await verify(req)\n  if (!['user', 'moderator', 'owner'].includes(req.role))\n    return res.status(401).json({ message: 'Not authorized' })\n\n  console.log('Your role', req.role)\n  console.log('Your uid', req.uid)\n  console.log('Your project', req.pid)\n\n  await query(\n    gql`\n      query Profile($uid: String!) {\n        users_by_pk(uid: $uid) {\n          doc\n        }\n      }\n    `,\n    { uid: req.uid },\n    { auth: req.auth }\n  )\n\n  res.json({ role: req.role })\n}\n")),(0,a.kt)("p",null,"Verify"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// @healthblocks-io/server/auth\nimport { getJSON } from '@bothrs/util/fetch'\n\nexport async function verify(req) {\n  if (req.headers.authorization) {\n    req.auth = req.headers.authorization.replace('Bearer ', '')\n    const user = await getJSON('https://api.healthblocks.io/api/auth', {\n      auth: req.auth,\n    })\n    Object.assign(req, user)\n  }\n}\n")),(0,a.kt)("p",null,"GraphQL"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"// @healthblocks-io/server/graphql\nimport { postJSON } from '@bothrs/util/fetch'\n\nconst api = process.env.HASURA_GRAPHQL_ORIGIN || 'https://graph.healthblocks.io'\n\n// TODO\nexport const gql = String.raw\n\nexport async function query(query, variables, options) {\n  try {\n    const result = await postJSON(\n      api + '/v1/graphql',\n      { query, variables },\n      options\n    )\n  } catch (e) {\n    // await Sentry.captureException(e, { extra: { query, variables } })\n    return {\n      data: null,\n      errors: [{ message: e.message }],\n    }\n  }\n}\n")))}h.isMDXComponent=!0}}]);