(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return h}));var a=n(0),o=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=o.a.createContext({}),s=function(e){var t=o.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=s(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},b=o.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,i=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),d=s(n),b=a,h=d["".concat(i,".").concat(b)]||d[b]||u[b]||r;return n?o.a.createElement(h,l(l({ref:t},p),{},{components:n})):o.a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=b;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},88:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return l})),n.d(t,"toc",(function(){return c})),n.d(t,"default",(function(){return s}));var a=n(3),o=n(7),r=(n(0),n(106)),i={title:"Initial project setup"},l={unversionedId:"guides/initial-project-setup",id:"guides/initial-project-setup",isDocsHomePage:!1,title:"Initial project setup",description:"Existing project",source:"@site/docs/guides/initial-project-setup.md",slug:"/guides/initial-project-setup",permalink:"/docs/guides/initial-project-setup",editUrl:"https://github.com/healthblocks-io/docs/edit/master/website/docs/guides/initial-project-setup.md",version:"current",sidebar:"docs",previous:{title:"Getting started",permalink:"/docs/"},next:{title:"End-to-end testing with Detox",permalink:"/docs/guides/e2e-testing-with-detox"}},c=[{value:"Existing project",id:"existing-project",children:[]},{value:"New Expo App",id:"new-expo-app",children:[]},{value:"Auth0",id:"auth0",children:[]}],p={toc:c};function s(e){var t=e.components,n=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"existing-project"},"Existing project"),Object(r.b)("p",null,'We currently focus on the "New Expo App" workflow below.'),Object(r.b)("p",null,"Install the modules"),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-bash"},"# React Native app\nyarn add @healthblocks-io/core @healthblocks-io/apollo @healthblocks-io/native\n\n# Web app\nyarn add @healthblocks-io/core @healthblocks-io/apollo\n\n# Server\nyarn add @healthblocks-io/core\n")),Object(r.b)("h2",{id:"new-expo-app"},"New Expo App"),Object(r.b)("p",null,"This guide will help you get started with integrating Healthblocks in a new Expo project."),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Clone the boilerplate project, start from empty folder"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/healthblocks-io/template-app project-name\n# OR\nnpx degit https://github.com/healthblocks-io/template-app project-name\n\ncd project-name\nyarn\nyarn dev\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Customize app.json to your needs : name, slug, android.package, ios.bundleIdentifier")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Publish using the expo cli: ",Object(r.b)("inlineCode",{parentName:"p"},"npx expo publish"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Enable CI/CD, we use GitHub Actions, these are included in the template. You need some ENV secrets though:"),Object(r.b)("p",{parentName:"li"},"Visit\xa0",Object(r.b)("a",{parentName:"p",href:"https://github.com/bothrs/pillar-app/settings/secrets"},"https://github.com/bothrs/pillar-app/settings/secrets"),"\xa0and check if ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_CLI_PASSWORD")," and ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_CLI_USERNAME")," are configured. It's a good practice to configure these on an organisation level (for an agency)."),Object(r.b)("p",{parentName:"li"},"As an agency, you may not want to share all your apps in development with every client. That's why the template also includes actions that publish with the ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_CLI_USERNAME_CLIENT")," and ",Object(r.b)("inlineCode",{parentName:"p"},"EXPO_CLI_PASSWORD_CLIENT")," credentials. By default, we expect that these credentials are only used for demonstration purposes, so these credentials should not be used to build the final production app. If a client wants to join development, it's possible to consider using the client credentials for building the app. (building means e.g ",Object(r.b)("inlineCode",{parentName:"p"},"expo build:ios")," here)"))),Object(r.b)("h2",{id:"auth0"},"Auth0"),Object(r.b)("p",null,"We are looking into automating the Auth0 setup."),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-tsx"},'AWS production > SES\n  Identiticy Management > Email addresses\n    Verify a New Email Address: dokter@corona.org\n    (click link in email)\n\nmanage.auth0.com\n  Create tenant\n    Settings\n      Applications > Default App\n      Update Name: Dr. Corona\n      Take note of Domain + Client ID\n      Logo:\n      Application Type: Native (?Regular wEb)\n      Login URI: https://dashboard.healthblocks.io/dr-corona\n      Allowed Callback URLs: https://dashboard.healthblocks.io/dr-corona\n      ?Allow origin: dashboard?\n      Refresh Token Behavior: Rotating\n      Show Advanced Settings > Grant Types > Enable Password & Passwordless OTP\n      Save changes\n    Connections\n      check if username-password & google are enabled\n  Authentication > Passwordless\n    Enable Email\n      From: dokter@corona.org\n      Body: see https://api.healthblocks.io/api/invites?render=dr-corona&template=email.passwordless\n      OTP Expiry: little higher?\n    Enable SMS (Twilio credentials required)\n      sid: AC53a9f092ee571a2ff6bbfc1d315c1791\n      token: df9e731ac734d8acf62a383ed9ab39bd\n      From: +1 463 222 2231\n      Message: BioSil verification code is: @@password@@\n  Universal Login\n    Experience: New\n    Primary: same as theme.primary.color\n    Background: white\n  Authentication > Social > google-oauth2\n  Branding\n    Email Templates\n      Verification Email (link)\n        From: leave empty or dokter@corona.org\n        Subject: Welcome to {{ application.name }}\n        Redirect To: {{ application.callback_domain }}/dr-corona\n        Message: see https://api.healthblocks.io/api/invites?render=dr-corona&template=email.verify\n    Email Provider\n      From: Healthblocks <hello@healthblocks.io>\n      Host: email-smtp.eu-central-1.amazonaws.com\n      Port: 587\n      Credentials: see https://eu-central-1.console.aws.amazon.com/ses/home?region=eu-central-1#smtp-settings:\n  Applications > Create Application\n    Name: API\n    Type: Machine to Machine\n        Select Auth0 Management API\n    Confirm and goto application "Settings"\n    Copy domain, client id & client secret to project.secret_auth0.manage\n  Tenant Settings\n    Friendly Name: Dokter Corona\n    Logo URL: ...\n    Support Email: support+drcorona@healthblocks.io\n    Support URL: https://healthblocks.io\n')))}s.isMDXComponent=!0}}]);