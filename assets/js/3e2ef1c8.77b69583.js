"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7083],{3905:function(e,r,t){t.d(r,{Zo:function(){return l},kt:function(){return d}});var n=t(67294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function c(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=n.createContext({}),u=function(e){var r=n.useContext(i),t=r;return e&&(t="function"==typeof e?e(r):c(c({},r),e)),t},l=function(e){var r=u(e.components);return n.createElement(i.Provider,{value:r},e.children)},p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),f=u(t),d=o,m=f["".concat(i,".").concat(d)]||f[d]||p[d]||a;return t?n.createElement(m,c(c({ref:r},l),{},{components:t})):n.createElement(m,c({ref:r},l))}));function d(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=f;var s={};for(var i in r)hasOwnProperty.call(r,i)&&(s[i]=r[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,c[1]=s;for(var u=2;u<a;u++)c[u]=t[u];return n.createElement.apply(null,c)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},81622:function(e,r,t){t.d(r,{Z:function(){return o}});var n=t(67294);function o(e){e.children;var r=e.expo,t=void 0!==r&&r,o=e.web,a=e.rn,c=e.react;return n.createElement("div",{style:{margin:"1em 0"}},"Platforms:",o&&n.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Web"),c&&n.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React"),a&&n.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React Native"),t&&n.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Expo"))}},93393:function(e,r,t){t.r(r),t.d(r,{assets:function(){return p},contentTitle:function(){return u},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return f}});var n=t(83117),o=t(80102),a=(t(67294),t(3905)),c=t(81622),s=["components"],i={title:"useUser"},u=void 0,l={unversionedId:"react/hooks/useUser",id:"react/hooks/useUser",title:"useUser",description:"This hook returns the decoded payload of the current JWT id token.",source:"@site/docs/react/hooks/useUser.md",sourceDirName:"react/hooks",slug:"/react/hooks/useUser",permalink:"/docs/react/hooks/useUser",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/react/hooks/useUser.md",tags:[],version:"current",frontMatter:{title:"useUser"},sidebar:"docs",previous:{title:"useProject",permalink:"/docs/react/hooks/useProject"},next:{title:"Table of contents",permalink:"/docs/types/"}},p={},f=[],d={toc:f};function m(e){var r=e.components,t=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,n.Z)({},d,t,{components:r,mdxType:"MDXLayout"}),(0,a.kt)(c.Z,{expo:!0,mdxType:"Platforms"}),(0,a.kt)("p",null,"This hook returns the decoded payload of the current JWT id token."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useUser } from '@healthblocks-io/core/auth'\n\nfunction Page() {\n  const decoded = useUser()\n  console.log('My id is', decoded?.sub)\n}\n")))}m.isMDXComponent=!0}}]);