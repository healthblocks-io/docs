"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[692],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=u(n),m=i,h=d["".concat(s,".").concat(m)]||d[m]||p[m]||a;return n?r.createElement(h,o(o({ref:t},c),{},{components:n})):r.createElement(h,o({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},24228:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return d}});var r=n(87462),i=n(63366),a=(n(67294),n(3905)),o=["components"],l={title:"Secure Authentication"},s=void 0,u={unversionedId:"blocks/authentication",id:"blocks/authentication",isDocsHomePage:!1,title:"Secure Authentication",description:"Healthblocks Authentication is based on a rotating JWT token.",source:"@site/docs/blocks/authentication.md",sourceDirName:"blocks",slug:"/blocks/authentication",permalink:"/docs/blocks/authentication",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/blocks/authentication.md",tags:[],version:"current",frontMatter:{title:"Secure Authentication"},sidebar:"docs",previous:{title:"Project configuration",permalink:"/docs/blocks/project-configuration"},next:{title:"Content Suggestions",permalink:"/docs/blocks/content-suggestions"}},c=[{value:"Prerequisites",id:"prerequisites",children:[],level:3},{value:"Example",id:"example",children:[],level:3},{value:"Available hooks",id:"available-hooks",children:[],level:3}],p={toc:c};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Healthblocks Authentication is based on a rotating JWT token."),(0,a.kt)("h3",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Configure the Auth0 integration in project configuration.")),(0,a.kt)("h3",{id:"example"},"Example"),(0,a.kt)("p",null,"First wrap your app in ",(0,a.kt)("inlineCode",{parentName:"p"},"<AuthProvider>")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"<ProjectProvider>"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { ProjectProvider } from '@healthblocks/core/project'\nimport { AuthProvider } from '@healthblocks/core/auth'\n\nconst App = () => {\n  return (\n    <ProjectProvider pid=\"example\">\n      <AuthProvider>\n        <Screens />\n      </AuthProvider>\n    </ProjectProvider>\n  )\n}\n")),(0,a.kt)("p",null,"Now only show the sign in screen when the user is not logged in yet."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useAuth, useUser } from '@healthblocks/core/auth'\n\nconst Screens = () => {\n  const user = useUser()\n  if (!user) {\n    return <SignInScreen />\n  }\n  return <div>Logged in as {user.sub}</div>\n}\n\nconst SignInScreen = () => {\n  const { signInWithEmailAndPassword, createUserWithEmailAndPassword } = useAuth()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  return (\n    <div>\n      <input\n        placeholder=\"email\"\n        onChange={(evt) => setEmail(evt.target.value)}\n      />\n      <input\n        placeholder=\"password\"\n        onChange={(evt) => setPassword(evt.target.value)}\n      />\n      <button onClick={() => signInWithEmailAndPassword(email, password)}>Sign in</button>\n      <button onClick={() => createUserWithEmailAndPassword(email, password)}>Register</button>\n    </div>\n  )\n}\n")),(0,a.kt)("h3",{id:"available-hooks"},"Available hooks"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useAuth")," returns the auth state and useful sign in methods."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"data")," has the auth state"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"loading")," is true when one of the sign in methods is busy"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"error")," has the last auth error"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"dismissError()")," clears the error state"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"signInAnonymously()")," is a way to create an account without credentials"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"signInAnonymously()")," is a way to create an account without credentials"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"signInWithToken(id_token)")," is a way to sign in using Auth0 or other providers"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"signInWithEmailAndPassword(email, password)")," is a way to sign in using Auth0 email/password"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"createUserWithEmailAndPassword(email, password, code)")," is a way to create an account using email/password"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sendPasswordResetEmail(email)")," sends a password reset email")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"useUser")," returns the decoded id_token of the currently logged in user."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sub")," is the user id"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"email")," is the verified user email address"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"phone")," is the verified user phone number")))}d.isMDXComponent=!0}}]);