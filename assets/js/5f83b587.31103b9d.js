"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[167],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),f=o,h=d["".concat(s,".").concat(f)]||d[f]||l[f]||i;return n?r.createElement(h,a(a({ref:t},u),{},{components:n})):r.createElement(h,a({ref:t},u))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48532:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var r=n(83117),o=n(80102),i=(n(67294),n(3905)),a=["components"],c={sidebar_position:7,title:"Authenticator"},s=void 0,p={unversionedId:"concepts/authenticator",id:"concepts/authenticator",title:"Authenticator",description:"An authenticator is mechanism that proves the identity of a user. Healthblocks supports two types of authenticators. The first is OpenID, an industry standard way to connect existing identities (think of Google/Apple) to your own patient experience. The second option is email/password.",source:"@site/docs/concepts/authenticator.md",sourceDirName:"concepts",slug:"/concepts/authenticator",permalink:"/docs/concepts/authenticator",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/concepts/authenticator.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Authenticator"},sidebar:"docs",previous:{title:"Care Plan Template",permalink:"/docs/concepts/care-plan-template"},next:{title:"Multi-tenancy",permalink:"/docs/concepts/multi-tenant"}},u={},l=[{value:"OpenID (oAuth)",id:"openid-oauth",level:3},{value:"Credentials",id:"credentials",level:3}],d={toc:l};function f(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"An authenticator is mechanism that proves the identity of a user. Healthblocks supports two types of authenticators. The first is OpenID, an industry standard way to connect existing identities (think of Google/Apple) to your own patient experience. The second option is email/password."),(0,i.kt)("p",null,"The advantage of email/password is that it requires no setup with a third party. The advantage of OpenID is that the user does not need to remember another password, typically resulting in improved security."),(0,i.kt)("h3",{id:"openid-oauth"},"OpenID (oAuth)"),(0,i.kt)("p",null,"oAuth2 is the recommended way of authentication."),(0,i.kt)("h3",{id:"credentials"},"Credentials"),(0,i.kt)("p",null,"This means email + password. Same concept as in NextAuth."))}f.isMDXComponent=!0}}]);