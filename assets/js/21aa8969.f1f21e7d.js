"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9811],{3905:function(e,n,r){r.d(n,{Zo:function(){return u},kt:function(){return f}});var t=r(67294);function o(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function a(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function c(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?a(Object(r),!0).forEach((function(n){o(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function i(e,n){if(null==e)return{};var r,t,o=function(e,n){if(null==e)return{};var r,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||(o[r]=e[r]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)r=a[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=t.createContext({}),p=function(e){var n=t.useContext(s),r=n;return e&&(r="function"==typeof e?e(n):c(c({},n),e)),r},u=function(e){var n=p(e.components);return t.createElement(s.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},d=t.forwardRef((function(e,n){var r=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=p(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||l[f]||a;return r?t.createElement(m,c(c({ref:n},u),{},{components:r})):t.createElement(m,c({ref:n},u))}));function f(e,n){var r=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=r.length,c=new Array(a);c[0]=d;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,c[1]=i;for(var p=2;p<a;p++)c[p]=r[p];return t.createElement.apply(null,c)}return t.createElement.apply(null,r)}d.displayName="MDXCreateElement"},81622:function(e,n,r){r.d(n,{Z:function(){return o}});var t=r(67294);function o(e){e.children;var n=e.expo,r=void 0!==n&&n,o=e.web,a=e.rn,c=e.react;return t.createElement("div",{style:{margin:"1em 0"}},"Platforms:",o&&t.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Web"),c&&t.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React"),a&&t.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 React Native"),r&&t.createElement("span",{style:{backgroundColor:"#4a4",borderRadius:"2px",color:"#fff",padding:"0.2rem .4rem",marginLeft:4}},"\u2713 Expo"))}},54461:function(e,n,r){r.r(n),r.d(n,{assets:function(){return l},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return u},toc:function(){return d}});var t=r(83117),o=r(80102),a=(r(67294),r(3905)),c=r(81622),i=["components"],s={title:"useTrackOpened"},p=void 0,u={unversionedId:"expo/hooks/useTrackOpened",id:"expo/hooks/useTrackOpened",title:"useTrackOpened",description:"This hook tracks a tab/page being opened/closed based on '@react-navigation/native' events.",source:"@site/docs/expo/hooks/useTrackOpened.md",sourceDirName:"expo/hooks",slug:"/expo/hooks/useTrackOpened",permalink:"/docs/expo/hooks/useTrackOpened",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/expo/hooks/useTrackOpened.md",tags:[],version:"current",frontMatter:{title:"useTrackOpened"},sidebar:"docs",previous:{title:"usePush",permalink:"/docs/expo/hooks/usePush"},next:{title:"Screens",permalink:"/docs/expo/screens"}},l={},d=[],f={toc:d};function m(e){var n=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,t.Z)({},f,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)(c.Z,{expo:!0,mdxType:"Platforms"}),(0,a.kt)("p",null,"This hook tracks a tab/page being opened/closed based on '@react-navigation/native' events."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useTrackOpened } from '@healthblocks-io/native/useTrackOpened'\n\nfunction Tab() {\n  useTrackOpened('Settings')\n  return (\n    <View>\n      <Text>Settings</Text>\n    </View>\n  )\n}\n")))}m.isMDXComponent=!0}}]);