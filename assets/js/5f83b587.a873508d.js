"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[167],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),p=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,h=d["".concat(c,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},48532:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var r=n(83117),o=n(80102),a=(n(67294),n(3905)),i=["components"],s={sidebar_position:7,title:"Authenticator"},c=void 0,p={unversionedId:"concepts/authenticator",id:"concepts/authenticator",title:"Authenticator",description:"An authenticator is mechanism that proves the identity of a user. Healthblocks supports two types of authenticators. The first is OpenID, an industry standard way to connect existing identities (think of Google/Apple) to your own patient experience. The second option is email/password.",source:"@site/docs/concepts/authenticator.md",sourceDirName:"concepts",slug:"/concepts/authenticator",permalink:"/docs/concepts/authenticator",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/concepts/authenticator.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,title:"Authenticator"},sidebar:"docs",previous:{title:"Care Plan Template",permalink:"/docs/concepts/care-plan-template"},next:{title:"Multi-tenancy",permalink:"/docs/concepts/multi-tenant"}},u={},l=[{value:"OpenID (oAuth)",id:"openid-oauth",level:3},{value:"Credentials",id:"credentials",level:3}],d={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An authenticator is mechanism that proves the identity of a user. Healthblocks supports two types of authenticators. The first is OpenID, an industry standard way to connect existing identities (think of Google/Apple) to your own patient experience. The second option is email/password."),(0,a.kt)("p",null,"The advantage of email/password is that it requires no setup with a third party. The advantage of OpenID is that the user does not need to remember another password, typically resulting in improved security."),(0,a.kt)("h3",{id:"openid-oauth"},"OpenID (oAuth)"),(0,a.kt)("p",null,"oAuth2 is the recommended way of authentication."),(0,a.kt)("h3",{id:"credentials"},"Credentials"),(0,a.kt)("p",null,"This means email + password. Same concept as in NextAuth.",(0,a.kt)("br",null),"\nWhen configuring email + password authentication it is required to connect a smtp mailer.\nThis mailer is used to send users a password reset email when they forgot their password."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Mailer data:"),(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"From:")," The email address you want your users to get the password reset email from.",(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Smtp:")," Your smtps connection url."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Example:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'{\n  "from": "password@healthblocks.io",\n  "smtp": "smtps://username:password@smtp.example.com/?pool=true"\n}\n')),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Meta:"),(0,a.kt)("br",null),"\n",(0,a.kt)("strong",{parentName:"p"},"Callbacks:")," An array of urls the user can be sent to when requesting a password reset."))}m.isMDXComponent=!0}}]);