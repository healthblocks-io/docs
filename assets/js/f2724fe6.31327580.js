"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2687],{3905:function(e,t,o){o.d(t,{Zo:function(){return u},kt:function(){return m}});var r=o(67294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function l(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function c(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?l(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):l(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function a(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},l=Object.keys(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)o=l[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var i=r.createContext({}),s=function(e){var t=r.useContext(i),o=t;return e&&(o="function"==typeof e?e(t):c(c({},t),e)),o},u=function(e){var t=s(e.components);return r.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,l=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),h=s(o),m=n,f=h["".concat(i,".").concat(m)]||h[m]||p[m]||l;return o?r.createElement(f,c(c({ref:t},u),{},{components:o})):r.createElement(f,c({ref:t},u))}));function m(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=o.length,c=new Array(l);c[0]=h;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:n,c[1]=a;for(var s=2;s<l;s++)c[s]=o[s];return r.createElement.apply(null,c)}return r.createElement.apply(null,o)}h.displayName="MDXCreateElement"},68771:function(e,t,o){o.r(t),o.d(t,{frontMatter:function(){return a},contentTitle:function(){return i},metadata:function(){return s},toc:function(){return u},default:function(){return h}});var r=o(87462),n=o(63366),l=(o(67294),o(3905)),c=["components"],a={title:"@healthblocks-io/core"},i=void 0,s={unversionedId:"examples/@healthblocks-io/core",id:"examples/@healthblocks-io/core",isDocsHomePage:!1,title:"@healthblocks-io/core",description:"@healthblocks-io/core/theme",source:"@site/docs/examples/@healthblocks-io/core.md",sourceDirName:"examples/@healthblocks-io",slug:"/examples/@healthblocks-io/core",permalink:"/docs/examples/@healthblocks-io/core",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/examples/@healthblocks-io/core.md",tags:[],version:"current",frontMatter:{title:"@healthblocks-io/core"},sidebar:"docs",previous:{title:"Theming",permalink:"/docs/examples/theming"},next:{title:"@healthblocks-io/apollo",permalink:"/docs/examples/@healthblocks-io/apollo"}},u=[{value:"@healthblocks-io/core/theme",id:"healthblocks-iocoretheme",children:[],level:3},{value:"@healthblocks-io/core/upload",id:"healthblocks-iocoreupload",children:[],level:3}],p={toc:u};function h(e){var t=e.components,o=(0,n.Z)(e,c);return(0,l.kt)("wrapper",(0,r.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h3",{id:"healthblocks-iocoretheme"},"@healthblocks-io/core/theme"),(0,l.kt)("p",null,"This module provides helpers & hooks for the current theme"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useTheme } from '@healthblocks/core/theme'\n\nconst RocketLauncher = () => {\n  const theme = useTheme()\n  return <Button style={{ color: theme.color.primary }}>Launch</Button>\n}\n")),(0,l.kt)("h3",{id:"healthblocks-iocoreupload"},"@healthblocks-io/core/upload"),(0,l.kt)("p",null,"This module allows users to safely upload personal images."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-tsx"},"import { upload, useSignedURL } from '@healthblocks/core/upload'\n\nconst Camera = () => {\n  const takePicture = () => {\n    const file = await cameraRef.takePictureAsync()\n    const selfie = await upload(file)\n    // await updateProfile({ selfie })\n  }\n  return <Button onPress={takePicture}>Take picture</Button>\n}\n\nconst Avatar = () => {\n  const sign = useSignedURL()\n  const doc = useProfile()\n  return <Image source={{ uri: sign(doc.selfie.url) }} />\n}\n")))}h.isMDXComponent=!0}}]);