"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8329],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return f}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,s=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),m=u(n),f=o,d=m["".concat(c,".").concat(f)]||m[f]||p[f]||s;return n?r.createElement(d,i(i({ref:t},l),{},{components:n})):r.createElement(d,i({ref:t},l))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var s=n.length,i=new Array(s);i[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a.mdxType="string"==typeof e?e:o,i[1]=a;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},53117:function(e,t,n){n.r(t),n.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return a},metadata:function(){return u},toc:function(){return p}});var r=n(83117),o=n(80102),s=(n(67294),n(3905)),i=["components"],a={sidebar_label:"Settings",title:"Settings screen"},c=void 0,u={unversionedId:"expo/screens/Settings",id:"expo/screens/Settings",title:"Settings screen",description:"This is not a complete screen, just some components that can be used on a settings screen.",source:"@site/docs/expo/screens/Settings.md",sourceDirName:"expo/screens",slug:"/expo/screens/Settings",permalink:"/docs/expo/screens/Settings",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/expo/screens/Settings.md",tags:[],version:"current",frontMatter:{sidebar_label:"Settings",title:"Settings screen"},sidebar:"docs",previous:{title:"Questionnaire",permalink:"/docs/expo/screens/Questionnaire"},next:{title:"Hooks",permalink:"/docs/react"}},l={},p=[{value:"SettingsButton",id:"settingsbutton",level:3},{value:"Input",id:"input",level:3}],m={toc:p};function f(e){var t=e.components,n=(0,o.Z)(e,i);return(0,s.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"This is not a complete screen, just some components that can be used on a settings screen."),(0,s.kt)("h3",{id:"settingsbutton"},"SettingsButton"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"export function SettingsScreen() {\n  return (\n    <View>\n      <SettingsButton\n        label={t('My care team')}\n        onPress={() => navigation.navigate('CareTeam')}\n      />\n      <SettingsButton\n        label={t('Privacy policy')}\n        onPress={() => openBrowserAsync(privacyURL)}\n      />\n      <SettingsButton label={t('Sign out')} onPress={() => signOut()} />\n    </View>\n  )\n}\n")),(0,s.kt)("h3",{id:"input"},"Input"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-tsx"},"import { useUserEditor } from '@healthblocks-io/core/user'\n\nexport function SettingsScreen() {\n  const theme = useTheme()\n  const { user, patchUser } = useUserEditor()\n  return (\n    <View>\n      <Text style={theme.label}>{t('Email')}</Text>\n      <TextInput\n        style={theme.input}\n        value={user.email}\n        onChangeText={email => patchUser({ email })}\n        placeholder=\"me@example.org\"\n        keyboardType=\"email-address\"\n      />\n    </View>\n  )\n}\n")))}f.isMDXComponent=!0}}]);