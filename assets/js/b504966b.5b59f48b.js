(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{106:function(e,r,n){"use strict";n.d(r,"a",(function(){return p})),n.d(r,"b",(function(){return d}));var t=n(0),o=n.n(t);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function s(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function l(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=o.a.createContext({}),u=function(e){var r=o.a.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):s(s({},r),e)),n},p=function(e){var r=u(e.components);return o.a.createElement(c.Provider,{value:r},e.children)},h={inlineCode:"code",wrapper:function(e){var r=e.children;return o.a.createElement(o.a.Fragment,{},r)}},b=o.a.forwardRef((function(e,r){var n=e.components,t=e.mdxType,a=e.originalType,i=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),b=t,d=p["".concat(i,".").concat(b)]||p[b]||h[b]||a;return n?o.a.createElement(d,s(s({ref:r},c),{},{components:n})):o.a.createElement(d,s({ref:r},c))}));function d(e,r){var n=arguments,t=r&&r.mdxType;if("string"==typeof e||t){var a=n.length,i=new Array(a);i[0]=b;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:t,i[1]=s;for(var c=2;c<a;c++)i[c]=n[c];return o.a.createElement.apply(null,i)}return o.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},93:function(e,r,n){"use strict";n.r(r),n.d(r,"frontMatter",(function(){return i})),n.d(r,"metadata",(function(){return s})),n.d(r,"toc",(function(){return l})),n.d(r,"default",(function(){return u}));var t=n(3),o=n(7),a=(n(0),n(106)),i={title:"Serverside integration"},s={unversionedId:"@healthblocks-io/server",id:"@healthblocks-io/server",isDocsHomePage:!1,title:"Serverside integration",description:"@healthblocks-io/server",source:"@site/docs/@healthblocks-io/server.md",slug:"/@healthblocks-io/server",permalink:"/docs/@healthblocks-io/server",editUrl:"https://github.com/healthblocks-io/docs/edit/master/website/docs/@healthblocks-io/server.md",version:"current",sidebar:"docs",previous:{title:"Mixpanel analytics integration",permalink:"/docs/@healthblocks-io/core/mixpanel"}},l=[{value:"Next.js example WITHOUT verifying user credentials",id:"nextjs-example-without-verifying-user-credentials",children:[]},{value:"Next.js example with verifying user credentials",id:"nextjs-example-with-verifying-user-credentials",children:[]}],c={toc:l};function u(e){var r=e.components,n=Object(o.a)(e,["components"]);return Object(a.b)("wrapper",Object(t.a)({},c,n,{components:r,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"healthblocks-ioserver"},"@healthblocks-io/server"),Object(a.b)("p",null,"@healthblocks-io/server DOES NOT EXIST YET, see code below"),Object(a.b)("h3",{id:"nextjs-example-without-verifying-user-credentials"},"Next.js example WITHOUT verifying user credentials"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"// pages/api/homescreen\nimport { gql, query } from '@healthblocks-io/server/graphql'\n\nexport default async function (req, res) {\n  const result = await query(\n    gql`\n      query Profile($uid: String!) {\n        users_by_pk(uid: $uid) {\n          doc\n        }\n      }\n    `,\n    { uid: req.uid },\n    { auth: req.headers.authorization.replace('Bearer ', '') }\n  )\n\n  res.json({ user: result.data.users_by_pk })\n}\n")),Object(a.b)("h3",{id:"nextjs-example-with-verifying-user-credentials"},"Next.js example with verifying user credentials"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"// pages/api/homescreen\nimport { verify } from '@healthblocks-io/server/auth'\nimport { gql, query } from '@healthblocks-io/server/graphql'\n\nexport default async function (req, res) {\n  await verify(req)\n  if (!['user', 'moderator', 'owner'].includes(req.role))\n    return res.status(401).json({ message: 'Not authorized' })\n\n  console.log('Your role', req.role)\n  console.log('Your uid', req.uid)\n  console.log('Your project', req.pid)\n\n  await query(\n    gql`\n      query Profile($uid: String!) {\n        users_by_pk(uid: $uid) {\n          doc\n        }\n      }\n    `,\n    { uid: req.uid },\n    { auth: req.auth }\n  )\n\n  res.json({ role: req.role })\n}\n")),Object(a.b)("p",null,"Verify"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"// @healthblocks-io/server/auth\nimport { getJSON } from '@bothrs/util/fetch'\n\nexport async function verify(req) {\n  if (req.headers.authorization) {\n    req.auth = req.headers.authorization.replace('Bearer ', '')\n    const user = await getJSON('https://api.healthblocks.io/api/auth', {\n      auth: req.auth,\n    })\n    Object.assign(req, user)\n  }\n}\n")),Object(a.b)("p",null,"GraphQL"),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-tsx"},"// @healthblocks-io/server/graphql\nimport { postJSON } from '@bothrs/util/fetch'\n\nconst api = process.env.HASURA_GRAPHQL_ORIGIN || 'https://graph.healthblocks.io'\n\n// TODO\nexport const gql = String.raw\n\nexport async function query(query, variables, options) {\n  try {\n    const result = await postJSON(\n      api + '/v1/graphql',\n      { query, variables },\n      options\n    )\n  } catch (e) {\n    // await Sentry.captureException(e, { extra: { query, variables } })\n    return {\n      data: null,\n      errors: [{ message: e.message }],\n    }\n  }\n}\n")))}u.isMDXComponent=!0}}]);