(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{108:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return c})),t.d(n,"toc",(function(){return l})),t.d(n,"default",(function(){return s}));var r=t(3),a=t(7),o=(t(0),t(114)),i={title:"Mixpanel analytics integration"},c={unversionedId:"@healthblocks-io/core/mixpanel",id:"@healthblocks-io/core/mixpanel",isDocsHomePage:!1,title:"Mixpanel analytics integration",description:"Basic",source:"@site/docs/@healthblocks-io/core/mixpanel.md",slug:"/@healthblocks-io/core/mixpanel",permalink:"/docs/@healthblocks-io/core/mixpanel",editUrl:"https://github.com/healthblocks-io/docs/edit/main/docs/@healthblocks-io/core/mixpanel.md",version:"current",sidebar:"docs",previous:{title:"Examples",permalink:"/docs/@healthblocks-io/core/examples"},next:{title:"Serverside integration",permalink:"/docs/@healthblocks-io/server"}},l=[{value:"Basic",id:"basic",children:[{value:"Advanced (TODO)",id:"advanced-todo",children:[]},{value:"Creating analytics plugins",id:"creating-analytics-plugins",children:[]}]}],p={toc:l};function s(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,t,{components:n,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"basic"},"Basic"),Object(o.b)("p",null,Object(o.b)("inlineCode",{parentName:"p"},"@healthblocks-io/core/analytics")," provides basic event tracking with optional mixpanel integration based on project configuration."),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"// Load Mixpanel token and hook into track()\nimport '@healthblocks-io/core/mixpanel'\nimport { track } from '@healthblocks-io/core/analytics'\n\ntrack('Activity Started', { any: 'details' })\n")),Object(o.b)("p",null,"These events are saved in Mixpanel AND Healthblocks."),Object(o.b)("h3",{id:"advanced-todo"},"Advanced (TODO)"),Object(o.b)("p",null,"Mixpanel provides more options, e.g. ",Object(o.b)("inlineCode",{parentName:"p"},"people_increment"),". These are not supported by Healthblocks at the moment. Therefor you can use Mixpanel directly:"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import { useMixpanel, MixpanelProvider } from '@healthblocks-io/core/mixpanel'\n\nconst App = () => (\n  <MixpanelProvider>\n    <MyButton />\n  </MixpanelProvider>\n)\n\nconst MyButton = () => {\n  const mixpanel = useMixpanel()\n  return <Button onPress={() => mixpanel.people_increment()} />\n}\n")),Object(o.b)("h3",{id:"creating-analytics-plugins"},"Creating analytics plugins"),Object(o.b)("pre",null,Object(o.b)("code",{parentName:"pre",className:"language-jsx"},"import { install } from '@healthblocks-io/core/analytics'\n\ninstall({\n  async track(data) {\n    const { pid } = app()\n    postJSON(TRACK_API + '/track', data)\n  },\n})\n")))}s.isMDXComponent=!0},114:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var r=t(0),a=t.n(r);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=a.a.createContext({}),s=function(e){var n=a.a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=s(e.components);return a.a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},b=a.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),b=r,m=u["".concat(i,".").concat(b)]||u[b]||d[b]||o;return t?a.a.createElement(m,c(c({ref:n},p),{},{components:t})):a.a.createElement(m,c({ref:n},p))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=b;var c={};for(var l in n)hasOwnProperty.call(n,l)&&(c[l]=n[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=t[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);